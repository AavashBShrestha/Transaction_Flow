@page "/add-transaction"
@using Transaction_Flow.Model
@using Transaction_Flow.Services
@inject TransactionServices TransactionServices

<h3>Add Transaction</h3>

<EditForm Model="@transaction" OnValidSubmit="AddTransaction">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" class="form-control" @bind-Value="transaction.Title" />
    </div>
    <div class="form-group">
        <label for="amount">Amount</label>
        <InputNumber id="amount" class="form-control" @bind-Value="transaction.Amount" />
    </div>
    <div class="form-group">
        <label for="type">Transaction Type</label>
        <InputSelect id="type" class="form-control" @bind-Value="transaction.TransactionType">
            <option value="Credit">Credit</option>
            <option value="Debit">Debit</option>
            <option value="Debt">Debt</option>
        </InputSelect>
    </div>
    <div class="form-group">
        <label for="tags">Tags (comma-separated)</label>
        <InputText id="tags" class="form-control" @bind-Value="tagsInput" />
    </div>
    <div class="form-group">
        <label for="note">Note</label>
        <InputTextArea id="note" class="form-control" @bind-Value="transaction.Note" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Add Transaction</button>
</EditForm>

@code {
    private TransactionModel transaction = new TransactionModel();
    private string tagsInput = string.Empty; // To capture input for tags

    private async Task AddTransaction()
    {
        try
        {
            // Convert the comma-separated string to an array of tags
            transaction.Tags = tagsInput.Split(',').Select(tag => tag.Trim()).ToArray();

            // Add transaction to the database using TransactionServices
            await TransactionServices.SaveTransaction(transaction);

            // Optionally clear the form after successful submission
            transaction = new TransactionModel();
            tagsInput = string.Empty;
            Console.WriteLine("Transaction added successfully.");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding transaction: {ex.Message}");
        }
    }
}
